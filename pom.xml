<?xml version="1.0" encoding="UTF-8"?>

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>org.apache.tomcat.tck</groupId>
  <artifactId>servlet-tck-tomcat</artifactId>
  <version>1.0.0-SNAPSHOT</version>

  <name>tck-build</name>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <maven.compiler.sources>11</maven.compiler.sources>
    <maven.compiler.release>11</maven.compiler.release>
    <junit.version>5.10.0</junit.version>
    <slf4j.version>2.0.9</slf4j.version>
    <arquillian.core.version>1.7.1.Final</arquillian.core.version> <!-- 1.7.0.Final-SNAPSHOT -->
    <arquillian.tomcat.version>2.0.0.Final-SNAPSHOT</arquillian.tomcat.version>
    <surefire.version>3.0.0</surefire.version> <!-- 3.0.0-M7-SNAPSHOT -->
    <jakarta.tck.version>6.1.0-SNAPSHOT</jakarta.tck.version>
    <fork.argLine>-Xmx8g -Xms4g</fork.argLine>
    <http2.timeout></http2.timeout>
    <tomcat.root>${project.build.directory}/tomcat</tomcat.root>
    <tomcat.version>10.0.27</tomcat.version>
  </properties>

  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>org.jboss.arquillian</groupId>
        <artifactId>arquillian-bom</artifactId>
        <version>${arquillian.core.version}</version>
        <scope>import</scope>
        <type>pom</type>
      </dependency>
      <dependency>
        <groupId>org.junit</groupId>
        <artifactId>junit-bom</artifactId>
        <version>${junit.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
    </dependencies>
  </dependencyManagement>

  <dependencies>
    <dependency>
      <groupId>jakarta.servlet</groupId>
      <artifactId>tck-runtime</artifactId>
      <version>${jakarta.tck.version}</version>
      <exclusions>
        <exclusion>
          <groupId>commons-logging</groupId>
          <artifactId>*</artifactId>
        </exclusion>
        <exclusion>
          <groupId>org.glassfish.metro</groupId>
          <artifactId>*</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.jboss.shrinkwrap</groupId>
      <artifactId>shrinkwrap-api</artifactId>
    </dependency>
    <dependency>
      <groupId>org.jboss.arquillian.protocol</groupId>
      <artifactId>arquillian-protocol-servlet-jakarta</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.jboss.shrinkwrap.resolver</groupId>
      <artifactId>shrinkwrap-resolver-impl-maven</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.jboss.arquillian.container</groupId>
      <artifactId>arquillian-tomcat-embedded-10</artifactId>
      <version>1.2.0.Final</version>
    </dependency>
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.junit.vintage</groupId>
      <artifactId>junit-vintage-engine</artifactId>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.apache.tomcat</groupId>
      <artifactId>tomcat</artifactId>
      <version>${tomcat.version}</version>
      <type>zip</type>
    </dependency>
    <dependency>
      <groupId>org.apache.tomcat.embed</groupId>
      <artifactId>tomcat-embed-core</artifactId>
      <version>${tomcat.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.tomcat.embed</groupId>
      <artifactId>tomcat-embed-jasper</artifactId>
      <version>${tomcat.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.tomcat.embed</groupId>
      <artifactId>tomcat-embed-websocket</artifactId>
      <version>${tomcat.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-api</artifactId>
      <version>${slf4j.version}</version>
    </dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>jcl-over-slf4j</artifactId>
      <version>${slf4j.version}</version>
    </dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>jul-to-slf4j</artifactId>
      <version>${slf4j.version}</version>
    </dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-simple</artifactId>
      <version>${slf4j.version}</version>
    </dependency>
    <dependency>
      <groupId>org.jboss.arquillian.container</groupId>
      <artifactId>arquillian-container-test-spi</artifactId>
      <version>${arquillian.core.version}</version>
    </dependency>
    <dependency>
      <groupId>org.jboss.arquillian.junit5</groupId>
      <artifactId>arquillian-junit5-container</artifactId>
      <version>${arquillian.core.version}</version>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <build>

    <pluginManagement>
      <plugins>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-clean-plugin</artifactId>
          <version>3.2.0</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-resources-plugin</artifactId>
          <version>3.3.0</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-compiler-plugin</artifactId>
          <version>3.11.0</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-surefire-plugin</artifactId>
          <version>${surefire.version}</version>
          <configuration>
            <!-- this need some times to run -->
            <argLine>${fork.argLine} -Duser.language=en -Duser.country=US -Djava.locale.providers=COMPAT,CLDR
              -Djava.protocol.handler.pkgs=javax.net.ssl
              -Djavax.net.ssl.keyStore=${project.build.testOutputDirectory}/certificates/clientcert.jks
              -Djavax.net.ssl.keyStorePassword=changeit
              -Djavax.net.ssl.trustStore=${project.build.directory}/cacerts.jks</argLine>
            <forkedProcessTimeoutInSeconds>15000</forkedProcessTimeoutInSeconds>
            <dependenciesToScan>
              <dependenciesToScan>jakarta.servlet:tck-runtime</dependenciesToScan>
            </dependenciesToScan>
            <systemProperties>
              <http2.timeout>${http2.timeout}</http2.timeout>
            </systemProperties>
            <trimStackTrace>false</trimStackTrace>
          </configuration>
        </plugin>
        <plugin>
          <groupId>org.basepom.maven</groupId>
          <artifactId>duplicate-finder-maven-plugin</artifactId>
          <version>2.0.1</version>
        </plugin>
      </plugins>
    </pluginManagement>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-dependency-plugin</artifactId>
        <version>3.5.0</version>
        <executions>
          <execution>
            <id>unpack</id>
            <phase>generate-test-resources</phase>
            <goals>
              <goal>unpack</goal>
            </goals>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>jakarta.servlet</groupId>
                  <artifactId>tck-runtime</artifactId>
                  <type>jar</type>
                  <overWrite>false</overWrite>
                  <outputDirectory>${project.build.testOutputDirectory}/</outputDirectory>
                  <includes>**/**cts_cert,**/**clientcert.jks,**/**clientcert.p12</includes>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>

<!--          <execution>-->
<!--            <id>unpack-tomcat</id>-->
<!--            <phase>generate-test-resources</phase>-->
<!--            <goals>-->
<!--              <goal>unpack</goal>-->
<!--            </goals>-->
<!--            <configuration>-->
<!--              <outputDirectory>${tomcat.root}</outputDirectory>-->
<!--              <markersDirectory>${tomcat.root}/dependency-maven-plugin-markers</markersDirectory>-->
<!--              <artifactItems>-->
<!--                <artifactItem>-->
<!--                  <groupId>org.apache.tomcat</groupId>-->
<!--                  <artifactId>tomcat</artifactId>-->
<!--                  <version>${tomcat.version}</version>-->
<!--                  <type>zip</type>-->
<!--                  <overWrite>false</overWrite>-->
<!--                  <outputDirectory>${tomcat.root}</outputDirectory>-->
<!--                </artifactItem>-->
<!--              </artifactItems>-->
<!--            </configuration>-->
<!--          </execution>-->
        </executions>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>keytool-maven-plugin</artifactId>
        <version>1.7</version>
        <executions>
          <execution>
            <goals>
              <goal>importCertificate</goal>
            </goals>
            <phase>process-test-resources</phase>
          </execution>
        </executions>
        <configuration>
          <!-- "$JAVA_HOME/bin/keytool -import -noprompt -alias cts -dname \"CN=CTS, OU=Java Software, O=Sun Microsystems Inc., L=Burlington, ST=MA, C=US\"
          -file servlet-tck/bin/certificates/cts_cert -storetype JKS  -keystore cacerts.jks -storepass changeit -keypass changeit" -->
          <noprompt>true</noprompt>
          <alias>cts</alias>
          <dname>CN=CTS, OU=Java Software, O=Sun Microsystems Inc., L=Burlington, ST=MA, C=US</dname>
          <file>${project.build.testOutputDirectory}/certificates/cts_cert</file>
          <storetype>JKS</storetype>
          <keystore>${project.build.directory}/cacerts.jks</keystore>
          <storepass>changeit</storepass>
          <keypass>changeit</keypass>
          <skipIfExist>true</skipIfExist>
        </configuration>
      </plugin>
    </plugins>
  </build>

  <pluginRepositories>
    <pluginRepository>
      <id>apache.snapshots</id>
      <url>https://repository.apache.org/content/groups/snapshots</url>
      <releases>
        <enabled>false</enabled>
      </releases>
      <snapshots>
        <enabled>true</enabled>
      </snapshots>
    </pluginRepository>
  </pluginRepositories>
  <repositories>
    <repository>
      <id>apache.snapshots</id>
      <url>https://repository.apache.org/content/groups/snapshots</url>
      <releases>
        <enabled>false</enabled>
      </releases>
      <snapshots>
        <enabled>true</enabled>
      </snapshots>
    </repository>
  </repositories>
</project>
